# Generated by Django 4.1.3 on 2023-01-25 00:46

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CollectionInformation',
            fields=[
                ('collection_id', models.AutoField(primary_key=True, serialize=False, verbose_name='コレクションID')),
                ('training_image_list', django.contrib.postgres.fields.ArrayField(base_field=models.ImageField(null=True, upload_to='', verbose_name='画像パス一覧'), size=None)),
            ],
            options={
                'verbose_name_plural': 'CollectionInformation',
            },
        ),
        migrations.CreateModel(
            name='PatientUsers',
            fields=[
                ('patient_id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='患者ID')),
                ('patient_password', models.CharField(max_length=10, verbose_name='パスワード')),
                ('patient_birthday', models.DateField(verbose_name='生年月日')),
                ('patient_symptoms', models.CharField(max_length=20, verbose_name='症状別分類')),
                ('patient_completed', models.BooleanField(default=False, verbose_name='リハビリ有無')),
                ('is_delete', models.BooleanField(default=False, verbose_name='退会フラグ')),
                ('gender', models.CharField(max_length=10, verbose_name='性別')),
            ],
            options={
                'verbose_name_plural': 'PatientUser',
            },
        ),
        migrations.CreateModel(
            name='RehabMenu',
            fields=[
                ('rehab_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='リハビリID')),
                ('rehab_text', models.TextField(max_length=100, verbose_name='タスク内容テキスト')),
                ('patient_symptoms_list', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20, verbose_name='症状別分類ID一覧'), size=None)),
            ],
            options={
                'verbose_name_plural': 'RehabMenu',
            },
        ),
        migrations.CreateModel(
            name='SnsGroup',
            fields=[
                ('group_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='グループID')),
                ('post_id_list', models.IntegerField(verbose_name='投稿ID一覧')),
                ('patient_id_list', models.CharField(max_length=10, verbose_name='患者ID一覧')),
            ],
            options={
                'verbose_name_plural': 'SnsGroup',
            },
        ),
        migrations.CreateModel(
            name='StampInformation',
            fields=[
                ('stamp_id', models.AutoField(primary_key=True, serialize=False, verbose_name='スタンプID')),
                ('stamp_pass', models.TextField(verbose_name='スタンプ画像パス')),
            ],
            options={
                'verbose_name_plural': 'StampInformation',
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('patient_id', models.TextField(primary_key=True, serialize=False, verbose_name='患者ID')),
                ('collection_id_list', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(null=True, verbose_name='コレクション名一覧'), size=None)),
                ('training_id', models.TextField(verbose_name='育成中コレクション名')),
                ('training_stage', models.IntegerField(verbose_name='育成段階')),
            ],
            options={
                'verbose_name_plural': 'Training',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('patient_id', models.ForeignKey(db_column='patient_id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='wakuriha.patientusers', verbose_name='患者ID')),
                ('experience_text', models.TextField(max_length=2000, verbose_name='経験談')),
                ('experience_date', models.DateTimeField(auto_now_add=True, verbose_name='年月日')),
            ],
            options={
                'verbose_name_plural': 'Experience',
            },
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('todo_id', models.AutoField(primary_key=True, serialize=False, verbose_name='リハビリtodoID')),
                ('todo_text', models.TextField(max_length=100, null=True, verbose_name='その他用タスクテキスト')),
                ('todo_deletion', models.BooleanField(default=False, verbose_name='削除フラグ')),
                ('todo_references', models.BooleanField(default=False, verbose_name='完了フラグ')),
                ('achievement_list', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(null=True, verbose_name='達成日一覧'), size=None)),
                ('patient_id', models.ForeignKey(db_column='patient_id', on_delete=django.db.models.deletion.PROTECT, to='wakuriha.patientusers', verbose_name='患者ID')),
                ('rehab_id', models.ForeignKey(db_column='rehab_id', on_delete=django.db.models.deletion.PROTECT, to='wakuriha.rehabmenu', verbose_name='リハビリID')),
            ],
            options={
                'verbose_name_plural': 'Todo',
            },
        ),
        migrations.CreateModel(
            name='SupporterUsers',
            fields=[
                ('supporter_id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='サポーターID')),
                ('supporter_password', models.CharField(max_length=10, verbose_name='パスワード')),
                ('connections', models.BooleanField(null=True, verbose_name='患者との関係性')),
                ('supporter_email', models.EmailField(max_length=254, verbose_name='メールアドレス')),
                ('is_delete', models.BooleanField(default=False, verbose_name='退会フラグ')),
                ('patient_id', models.ForeignKey(db_column='patient_id', on_delete=django.db.models.deletion.PROTECT, to='wakuriha.patientusers', verbose_name='患者ID')),
            ],
            options={
                'verbose_name_plural': 'SupporterUser',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False, verbose_name='投稿ID')),
                ('stamp_id_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(verbose_name='スタンプID一覧'), size=None)),
                ('post_text', models.TextField(max_length=300, verbose_name='投稿内容')),
                ('post_date', models.DateField(verbose_name='年月日')),
                ('patient_id', models.ForeignKey(db_column='patient_id', on_delete=django.db.models.deletion.PROTECT, to='wakuriha.patientusers', verbose_name='患者ID')),
            ],
            options={
                'verbose_name_plural': 'Post',
            },
        ),
        migrations.CreateModel(
            name='Diary',
            fields=[
                ('diary_id', models.AutoField(primary_key=True, serialize=False, verbose_name='日記ID')),
                ('diary_date', models.DateTimeField(auto_now_add=True, verbose_name='年月日')),
                ('diary_text', models.TextField(max_length=1000, verbose_name='日記内容文')),
                ('diary_images', models.ImageField(upload_to='', verbose_name='日記画像パス')),
                ('patient_id', models.ForeignKey(db_column='patient_id', on_delete=django.db.models.deletion.PROTECT, to='wakuriha.patientusers', verbose_name='患者ID')),
            ],
            options={
                'verbose_name_plural': 'Diary',
            },
        ),
        migrations.CreateModel(
            name='Calender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_date', models.DateField(verbose_name='年月日')),
                ('calendar_text', models.TextField(max_length=300, verbose_name='')),
                ('patient_id', models.ForeignKey(db_column='patient_id', on_delete=django.db.models.deletion.PROTECT, to='wakuriha.patientusers', verbose_name='患者ID')),
            ],
            options={
                'verbose_name_plural': 'Calender',
            },
        ),
        migrations.AddConstraint(
            model_name='calender',
            constraint=models.UniqueConstraint(fields=('patient_id', 'calendar_date'), name='unique_calendar'),
        ),
    ]
